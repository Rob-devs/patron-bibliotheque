<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>ul.miage.patron</groupId>
  <artifactId>bibliotheque</artifactId>
  <version>1.0-SNAPSHOT</version>

  <name>bibliotheque</name>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>1.7</maven.compiler.source>
    <maven.compiler.target>1.7</maven.compiler.target>
    <!-- Le code source en UTF8 -->
    <project.build.sourceEnconding>UTF8</project.build.sourceEnconding>
    <!-- OÃ¹ stocker la distribution binaire -->
    <projet.bindist.dir>${project.basedir}/bindist</projet.bindist.dir>
    <!-- Nom de la classe principale -->
    <project.main.classname>${project.groupId}.${project.artifactId}.Launcher</project.main.classname>
    <!-- Nom de la classe principale -->
    <project.bin.appname>run</project.bin.appname>
  </properties>

  <dependencies>

    <dependency>
      <groupId>org.openjfx</groupId>
      <artifactId>javafx-fxml</artifactId>
      <version>22-ea+11</version>
    </dependency>

    <dependency>
      <groupId>org.openjfx</groupId>
      <artifactId>javafx-graphics</artifactId>
      <version>22-ea+11</version>
      <classifier>win</classifier>
    </dependency>

    <dependency>
      <groupId>org.openjfx</groupId>
      <artifactId>javafx-graphics</artifactId>
      <version>22-ea+11</version>
      <classifier>mac</classifier>
    </dependency>

    <dependency>
      <groupId>org.openjfx</groupId>
      <artifactId>javafx-controls</artifactId>
      <version>22-ea+11</version>
    </dependency>

    <dependency>
      <groupId>org.openjfx</groupId>
      <artifactId>javafx</artifactId>
      <version>22-ea+11</version>
      <type>pom</type>
    </dependency>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.11</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <!-- use java 17 -->
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.10.1</version>
        <configuration>
          <release>17</release>
        </configuration>
      </plugin>
      <plugin>
        <!-- create scripts for apps -->
        <!-- mvn package | appassembler:assemble -->
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>appassembler-maven-plugin</artifactId>
        <version>1.10</version>
        <configuration>
          <assembleDirectory>${projet.bindist.dir}</assembleDirectory>
          <programs>
            <program>
              <mainClass>${project.main.classname}</mainClass>
              <id>${project.bin.appname}</id>
            </program>
          </programs>
        </configuration>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>assemble</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <!-- create a distribution archive -->
        <!-- mvn install ou assemble:single -->
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <version>3.1.0</version>
        <executions>
          <execution>
            <id>make-zip</id>
            <phase>install</phase>
            <goals>
              <goal>single</goal>
            </goals>
            <configuration>
              <descriptors>
                <descriptor>zip.xml</descriptor>
              </descriptors>
              <appendAssemblyId>true</appendAssemblyId>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.openjfx</groupId>
        <artifactId>javafx-maven-plugin</artifactId>
        <version>0.0.5</version>
        <configuration>
          <mainClass>${project.main.classname}</mainClass>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>
